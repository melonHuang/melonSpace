{
    "version": 3,
    "sources": [
        "../../../../src/admin/controller/api/theme.js"
    ],
    "names": [
        "cluster",
        "require",
        "stats",
        "think",
        "promisify",
        "stat",
        "readdir",
        "writeFile",
        "THEME_DIR",
        "join",
        "RESOURCE_PATH",
        "getAction",
        "get",
        "theme",
        "getFileList",
        "files",
        "success",
        "filePath",
        "readFile",
        "encoding",
        "file",
        "getPageTemplateList",
        "getThemeList",
        "updateAction",
        "post",
        "content",
        "isWorker",
        "setTimeout",
        "worker",
        "kill",
        "fail",
        "putAction",
        "new_theme",
        "themeDir",
        "newThemeDir",
        "configPath",
        "config",
        "name",
        "model",
        "updateOptions",
        "base",
        "result",
        "pos",
        "isDirectory",
        "children",
        "push",
        "isFile",
        "themes",
        "infoFile",
        "extend",
        "id",
        "console",
        "log",
        "templatePath",
        "templates",
        "Error",
        "filter",
        "test",
        "t"
    ],
    "mappings": "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",
    "file": "../../../../src/admin/controller/api/theme.js",
    "sourcesContent": [
        "'use strict';\n\nimport fs from 'fs';\nimport path from 'path';\nimport Base from './base.js';\nimport {execSync} from 'child_process';\n\nconst cluster = require('cluster');\nconst stats = think.promisify(fs.stat);\nconst readdir = think.promisify(fs.readdir);\nconst writeFile = think.promisify(fs.writeFile);\nconst THEME_DIR = path.join(think.RESOURCE_PATH, 'theme');\n\nexport default class extends Base {\n  async getAction(){\n    switch(this.get('type')) {\n      case 'fileList':\n        let {theme} = this.get();\n        let files = await this.getFileList( path.join(THEME_DIR, theme) );\n        return this.success(files);\n        \n      case 'file':\n        let {filePath} = this.get();\n        let file = await think.promisify(fs.readFile)( path.join(THEME_DIR, filePath), {encoding: 'utf-8'} );\n        return this.success(file);\n\n      case 'templateList':\n        return await this.getPageTemplateList();\n\n      case 'themeList':\n      default:\n        return await this.getThemeList();\n    }\n  }\n\n  async updateAction() {\n    let {filePath, content} = this.post();\n    try {\n      await writeFile( \n        path.join(THEME_DIR, filePath), \n        content, \n        {encoding: 'utf-8'}\n      );\n\n      if( cluster.isWorker ) {\n        setTimeout(() => cluster.worker.kill(), 200);\n      }\n      this.success();\n    } catch(e) {\n      return this.fail(e);\n    }\n  }\n\n  /**\n   * Fork theme \n   */\n  async putAction() {\n    let {theme, new_theme} = this.post();\n    let themeDir = path.join(THEME_DIR, theme);\n    let newThemeDir = path.join(THEME_DIR, new_theme);\n    try {\n      let stat = await stats(newThemeDir);\n      return this.fail(`${new_theme} 已存在，请手动切换到该主题`);\n    } catch(e) {\n      execSync(`cp -r ${themeDir} ${newThemeDir}`);\n      \n      let configPath = path.join(newThemeDir, 'package.json');\n      let config = think.require(configPath);\n      config.name = new_theme;\n\n      try {\n        await writeFile(configPath, JSON.stringify(config, null, '\\t'), {encoding: 'utf-8'});\n        await this.model('options').updateOptions('theme', new_theme);\n        return this.success();\n      } catch(e) {\n        return this.fail(e);\n      }\n    }\n  }\n\n  /**\n   * 递归获取文件夹树\n   */\n  async getFileList(base) {\n    let result = [];\n    let files = await readdir(base);\n\n    for(let file of files) {\n      let pos = path.join(base, file);\n      let stat = await stats(pos);\n      if( stat.isDirectory() ) {\n        result.push({\n          name: file,\n          children: await this.getFileList(pos)\n        });\n      }\n\n      if( stat.isFile() ) {\n        result.push({name: file});\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * 获取主题列表\n   */\n  async getThemeList() {\n    let themes = await readdir(THEME_DIR);\n\n    let result = [];\n    for(let theme of themes) {\n      let infoFile = path.join(THEME_DIR, theme, 'package.json');\n      try {\n        let stat = await stats(infoFile);\n        result.push( think.extend({id: theme}, think.require(infoFile)) );\n      } catch(e) {\n        console.log(e);\n      }\n    }\n    return this.success(result);\n  }\n\n  /**\n   * 获取主题的自定义模板\n   */\n  async getPageTemplateList() {\n    let {theme} = this.get();\n    let templatePath = path.join(THEME_DIR, theme, 'template');\n    let templates = [];\n    try {\n      let stat = await stats(templatePath);\n      if( !stat.isDirectory() ) {\n        throw Error();\n      }\n    } catch(e) {\n      return this.success(templates);\n    }\n    templates = await readdir(templatePath);\n    templates = templates.filter(t => /\\.html$/.test(t));\n    return this.success(templates);\n  }\n}\n"
    ]
}