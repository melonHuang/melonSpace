{
    "version": 3,
    "sources": [
        "../../../src/home/controller/post.js"
    ],
    "names": [
        "stats",
        "think",
        "promisify",
        "stat",
        "indexAction",
        "listAction",
        "model",
        "where",
        "tag",
        "get",
        "cate",
        "name",
        "find",
        "user",
        "isEmpty",
        "user_id",
        "id",
        "getPostList",
        "list",
        "data",
        "forEach",
        "post",
        "pathname",
        "encodeURIComponent",
        "pagination",
        "assign",
        "posts",
        "displayView",
        "detailAction",
        "http",
        "url",
        "decodeURIComponent",
        "getPostDetail",
        "detail",
        "redirect",
        "pageAction",
        "setRelation",
        "is_public",
        "type",
        "status",
        "template",
        "options",
        "JSON",
        "parse",
        "join",
        "THEME_VIEW_PATH",
        "sep",
        "slice",
        "console",
        "log",
        "archiveAction",
        "getPostArchive",
        "i",
        "map",
        "tagAction",
        "getTagArchive",
        "searchAction",
        "keyword",
        "trim",
        "postModel",
        "searchResultPromise",
        "getPostSearch",
        "tagModel",
        "hotTagsPromise",
        "getHotTags"
    ],
    "mappings": "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",
    "file": "../../../src/home/controller/post.js",
    "sourcesContent": [
        "'use strict';\n\nimport Base from './base.js';\nimport fs from 'fs';\nimport path from 'path';\n\nconst stats = think.promisify(fs.stat);\n\n\nexport default class extends Base {\n  /**\n   * index action\n   * @return {[type]} [description]\n   */\n  indexAction(){\n    return this.listAction();\n  }\n  /**\n   * post list\n   * @return {Promise} []\n   */\n  async listAction(){\n    let model = this.model('post');\n    let where = {\n      tag: this.get('tag'),\n      cate: this.get('cate')\n    };\n    if( this.get('name') ) {\n      let user = await this.model('user').where({name: this.get('name')}).find();\n      if( !think.isEmpty(user) ) {\n        where.where = {user_id: user.id};\n      }\n    }\n\n    let list = await model.getPostList(this.get('page'), where);\n    list.data.forEach(post => post.pathname = encodeURIComponent(post.pathname));\n    let {data, ...pagination} = list;\n    this.assign({\n      posts: data,\n      pagination,\n      tag: this.get('tag'),\n      cate: this.get('cate')\n    });\n    return this.displayView('index');\n  }\n  /**\n   * post detail\n   * @return {[type]} [description]\n   */\n  async detailAction(){\n    this.http.url = decodeURIComponent(this.http.url);\n    let pathname = this.get('pathname');\n    if( pathname === 'list' ) { return this.listAction(); }\n    \n    let detail = await this.model('post').getPostDetail(pathname);\n    if(think.isEmpty(detail)){\n      return this.redirect('/');\n    }\n    detail.pathname = encodeURIComponent(detail.pathname);\n    this.assign('post', detail);\n\n    return this.displayView('post');\n  }\n\n  async pageAction(){\n    let pathname = this.get('pathname');\n    let detail = await this.model('post').setRelation(false).where({\n      pathname,\n      is_public: 1, //公开\n      type: 1, //文章\n      status: 3 //已经发布\n    }).find();\n    detail.pathname = encodeURIComponent(detail.pathname);\n    this.assign('page', detail);\n    this.assign('pathname', pathname);\n    \n    let template = 'page';\n    if( detail.options ) {\n      try {\n        detail.options = JSON.parse(detail.options);\n        if( detail.options.template ) {\n          let stat = await stats( path.join(this.THEME_VIEW_PATH, 'template', detail.options.template) );\n          template = `template${think.sep}`+detail.options.template.slice(0, -5);\n        }\n      } catch(e) {\n        console.log(e);\n      }\n    }\n\n    return this.displayView(template);\n  }\n  /**\n   * post archive\n   * @return {[type]} [description]\n   */\n  async archiveAction(){\n    let model = this.model('post');\n    let data = await model.getPostArchive();\n    for(let i in data) { data[i].map(post => post.pathname = encodeURIComponent(post.pathname)) };\n    this.assign('list', data);\n    return this.displayView('archive');\n  }\n\n  async tagAction(){\n    let model = this.model('tag');\n    let data = await model.getTagArchive();\n    data.map(post => post.pathname = encodeURIComponent(post.pathname));\n    this.assign('list', data);\n    return this.displayView('tag');\n  }\n  /**\n   * search action\n   * @return {[type]} [description]\n   */\n  async searchAction(){\n    let keyword = this.get('keyword').trim();\n    if(keyword){\n      let postModel = this.model('post');\n      let searchResultPromise = postModel.getPostSearch(keyword, this.get('page'));\n      this.assign('searchData', searchResultPromise);\n    }\n\n    //热门标签\n    let tagModel = this.model('tag');\n    let hotTagsPromise = tagModel.getHotTags();\n    this.assign('hotTags', hotTagsPromise);\n\n\n    this.assign('keyword', keyword);\n    return this.displayView('search');\n  }\n}\n"
    ]
}