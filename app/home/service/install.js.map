{
    "version": 3,
    "sources": [
        "../../../src/home/service/install.js"
    ],
    "names": [
        "init",
        "dbConfig",
        "accountConfig",
        "ip",
        "type",
        "getModel",
        "name",
        "module",
        "think",
        "extend",
        "database",
        "model",
        "adapter",
        "mysql",
        "checkDbInfo",
        "dbInstance",
        "query",
        "catch",
        "reject",
        "insertData",
        "dbExist",
        "isEmpty",
        "dbFile",
        "ROOT_PATH",
        "sep",
        "isFile",
        "content",
        "readFileSync",
        "split",
        "filter",
        "item",
        "trim",
        "ignoreList",
        "it",
        "indexOf",
        "join",
        "replace",
        "prefix",
        "log",
        "promises",
        "map",
        "modelInstance",
        "where",
        "delete",
        "all",
        "optionsModel",
        "update",
        "value",
        "salt",
        "uuid",
        "password_salt",
        "key",
        "updateConfig",
        "data",
        "undefined",
        "dbConfigFile",
        "APP_PATH",
        "writeFileSync",
        "config",
        "createAccount",
        "password",
        "md5",
        "username",
        "email",
        "status",
        "addUser",
        "run",
        "firekylin",
        "setInstalled",
        "getOptions",
        "service",
        "base"
    ],
    "mappings": "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",
    "file": "../../../src/home/service/install.js",
    "sourcesContent": [
        "'use strict';\n\nimport fs from 'fs';\n\nexport default class extends think.service.base {\n  /**\n   * init\n   * @param  {[type]} info [description]\n   * @return {[type]}      [description]\n   */\n  init(dbConfig, accountConfig, ip){\n    this.dbConfig = dbConfig;\n    this.dbConfig.type = 'mysql';\n    this.accountConfig = accountConfig;\n    this.ip = ip;\n  }\n  /**\n   * get model\n   * @return {[type]} [description]\n   */\n  getModel(name, module){\n    let dbConfig\n    if(name === true){\n      dbConfig = think.extend({}, this.dbConfig);\n      dbConfig.database = '';\n      name = '';\n    }else{\n      dbConfig = this.dbConfig;\n    }\n    return this.model(name || 'user', {\n      adapter: {\n        mysql: dbConfig\n      }\n    }, module)\n  }\n  /**\n   *\n   * @return {[type]} [description]\n   */\n  checkDbInfo(){\n    let dbInstance = this.getModel(true);\n    return dbInstance.query('SELECT VERSION()').catch(() => {\n      return Promise.reject('数据库信息有误');\n    });\n  }\n  /**\n   * insert data\n   * @return {[type]} [description]\n   */\n  async insertData(){\n    let model = this.getModel(true);\n    let dbExist = await model.query(\"SELECT `TABLE_NAME` FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_SCHEMA`='\" + this.dbConfig.database + \"'\");\n    if(think.isEmpty(dbExist)){\n      //忽略错误\n      await model.query('CREATE DATABASE `' + this.dbConfig.database + '`').catch(() => {});\n      //model.close();\n    }\n    let dbFile = think.ROOT_PATH + think.sep + 'firekylin.sql';\n    if(!think.isFile(dbFile)){\n      return Promise.reject('数据库文件（firekylin.sql）不存在，请重新下载');\n    }\n\n\n    let content = fs.readFileSync(dbFile, 'utf8');\n    content = content.split('\\n').filter(item => {\n      item = item.trim();\n      let ignoreList = ['#', 'LOCK', 'UNLOCK'];\n      for(let it of ignoreList){\n        if(item.indexOf(it) === 0){\n          return false;\n        }\n      }\n      return true;\n    }).join(' ');\n    content = content.replace(/\\/\\*.*?\\*\\//g, '').replace(/fk_/g, this.dbConfig.prefix || '');\n\n\n    //导入数据\n    model = this.getModel();\n    content = content.split(';');\n    try{\n      for(let item of content){\n        item = item.trim();\n        if(item){\n          think.log(item);\n          await model.query(item);\n        }\n      }\n    }catch(e){\n      think.log(e);\n      return Promise.reject('数据表导入失败，请在控制台下查看具体的错误信息，并在 GitHub 上发 issue。');\n    }\n\n    think.log('before clear data');\n\n\n    //清除已有的数据内容\n    let promises = ['cate', 'post', 'post_cate', 'post_tag', 'tag', 'user'].map(item => {\n      let modelInstance = this.getModel(item);\n      if( modelInstance ) {\n        modelInstance.where('1=1').delete();\n      }\n    });\n    await Promise.all(promises);\n\n\n    let optionsModel = this.getModel('options');\n    await optionsModel.where('1=1').update({value: ''});\n    let salt = think.uuid(10) + '!@#$%^&*';\n    this.password_salt = salt;\n\n    await optionsModel.where({key: 'navigation'}).update({value: JSON.stringify([{\"label\":\"首页\",\"url\":\"/\",\"option\":\"home\"},{\"label\":\"归档\",\"url\":\"/archives/\",\"option\":\"archive\"},{\"label\":\"标签\",\"url\":\"/tags\",\"option\":\"tags\"},{\"label\":\"关于\",\"url\":\"/about\",\"option\":\"user\"},{\"label\":\"友链\",\"url\":\"/links\",\"option\":\"link\"}])});\n    await optionsModel.where({key: 'password_salt'}).update({value: salt});\n    await optionsModel.where({key: 'title'}).update({value: 'FireKylin 系统'});\n    await optionsModel.where({key: 'logo_url'}).update({value: '/static/img/firekylin.jpg'});\n    await optionsModel.where({key: 'theme'}).update({value: 'firekylin'});\n\n    //optionsModel.close();\n  }\n  /**\n   * update config\n   * @return {[type]} [description]\n   */\n  updateConfig(){\n    let data = {\n      type: 'mysql',\n      adapter: {\n        mysql: this.dbConfig\n      }\n    }\n    let content = `\n      \"use strict\";\n      exports.__esModule = true;\n      exports.default = ${JSON.stringify(data, undefined, 4)}\n    `;\n    let dbConfigFile = think.APP_PATH + '/common/config/db.js';\n    fs.writeFileSync(dbConfigFile, content);\n    think.config('db', data);\n  }\n  /**\n   * create account\n   * @return {[type]} [description]\n   */\n  async createAccount(){\n\n    let password = think.md5(this.password_salt + this.accountConfig.password);\n\n    let model = this.getModel('user', 'admin');\n    let data = {\n      username: this.accountConfig.username,\n      password,\n      email: '',\n      type: 1,\n      status: 1,\n      ip: this.ip\n    }\n    await model.addUser(data);\n    //model.close();\n  }\n  /**\n   * run\n   * @return {[type]} [description]\n   */\n  async run(){\n    await this.checkDbInfo();\n    await this.insertData();\n    await this.createAccount();\n    this.updateConfig();\n    firekylin.setInstalled();\n    let optionsModel = this.getModel('options');\n    await optionsModel.getOptions(true);\n    //optionsModel.close();\n  }\n}\n"
    ]
}